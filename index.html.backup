<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TV Logos Browser</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
            color: #e0e0e0;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
        }

        header {
            text-align: center;
            margin-bottom: 40px;
            padding: 30px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 15px;
            backdrop-filter: blur(10px);
        }

        h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .subtitle {
            color: #a0a0a0;
            font-size: 1.1em;
        }

        .controls {
            display: flex;
            gap: 15px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }

        .search-box, .country-select {
            flex: 1;
            min-width: 200px;
            padding: 15px 20px;
            font-size: 16px;
            border: 2px solid rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.05);
            color: #e0e0e0;
            transition: all 0.3s ease;
        }

        .search-box:focus, .country-select:focus {
            outline: none;
            border-color: #667eea;
            background: rgba(255, 255, 255, 0.08);
        }

        .country-select option {
            background: #1a1a2e;
            color: #e0e0e0;
        }

        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .logo-card {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 12px;
            padding: 20px;
            transition: all 0.3s ease;
            cursor: pointer;
            border: 2px solid transparent;
            position: relative;
            overflow: hidden;
        }

        .logo-card:hover {
            transform: translateY(-5px);
            border-color: #667eea;
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
        }

        .logo-container {
            width: 100%;
            height: 150px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(0, 0, 0, 0.3);
            border-radius: 8px;
            margin-bottom: 15px;
            padding: 15px;
        }

        .logo-container img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }

        .logo-name {
            font-size: 14px;
            word-break: break-word;
            color: #b0b0b0;
            margin-bottom: 8px;
        }

        .logo-path {
            font-size: 12px;
            color: #667eea;
            font-family: 'Courier New', monospace;
            word-break: break-all;
        }

        .copied-notification {
            position: fixed;
            bottom: 30px;
            right: 30px;
            background: #667eea;
            color: white;
            padding: 15px 25px;
            border-radius: 10px;
            box-shadow: 0 5px 20px rgba(102, 126, 234, 0.4);
            display: none;
            animation: slideIn 0.3s ease;
            z-index: 1000;
        }

        .copied-notification.show {
            display: block;
        }

        @keyframes slideIn {
            from {
                transform: translateX(400px);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        .loading {
            text-align: center;
            padding: 60px;
            font-size: 1.2em;
            color: #a0a0a0;
        }

        .no-results {
            text-align: center;
            padding: 60px;
            font-size: 1.2em;
            color: #a0a0a0;
        }

        .stats {
            text-align: center;
            margin-bottom: 20px;
            color: #a0a0a0;
        }

        .error-message {
            background: rgba(255, 100, 100, 0.1);
            border: 2px solid rgba(255, 100, 100, 0.3);
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
            color: #ffaaaa;
        }

        @media (max-width: 768px) {
            h1 {
                font-size: 1.8em;
            }
            
            .controls {
                flex-direction: column;
            }
            
            .grid {
                grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>üì∫ TV Logos Browser</h1>
            <p class="subtitle">Click any logo to copy its URL</p>
        </header>

        <div class="controls">
            <input type="text" class="search-box" id="searchBox" placeholder="Search logos...">
            <select class="country-select" id="countrySelect">
                <option value="">All Countries</option>
            </select>
        </div>

        <div class="stats" id="stats"></div>

        <div class="grid" id="logoGrid">
            <div class="loading">Loading logos manifest...</div>
        </div>
    </div>

    <div class="copied-notification" id="notification">
        ‚úì URL copied to clipboard!
    </div>

    <script>
        const BASE_URL = window.location.origin;
        let allLogos = [];
        let filteredLogos = [];

        // Load logos from manifest
        async function loadLogos() {
            const logoGrid = document.getElementById('logoGrid');
            
            try {
                const response = await fetch(`${BASE_URL}/logos-manifest.json`);
                
                if (!response.ok) {
                    throw new Error('Manifest not found');
                }
                
                const data = await response.json();
                allLogos = data.logos || [];
                
                // Populate country dropdown with unique countries
                populateCountryDropdown();
                
                filteredLogos = [...allLogos];
                renderLogos();
                
            } catch (error) {
                console.error('Error loading manifest:', error);
                logoGrid.innerHTML = `
                    <div class="error-message">
                        <h3>‚ö†Ô∏è Manifest File Not Found</h3>
                        <p>Please run the following commands in your repository:</p>
                        <pre style="background: rgba(0,0,0,0.3); padding: 15px; border-radius: 5px; margin-top: 10px; text-align: left;">
python3 generate_manifest.py
git add logos-manifest.json
git commit -m "Add logos manifest"
git push origin main</pre>
                    </div>
                `;
            }
        }

        function populateCountryDropdown() {
            const countrySelect = document.getElementById('countrySelect');
            
            // Get unique countries from logos
            const uniqueCountries = [...new Set(allLogos.map(logo => logo.country))].sort();
            
            uniqueCountries.forEach(country => {
                const option = document.createElement('option');
                option.value = country;
                const displayName = country.split('/').pop().replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase());
                option.textContent = displayName;
                countrySelect.appendChild(option);
            });
        }

        function renderLogos() {
            const logoGrid = document.getElementById('logoGrid');
            const stats = document.getElementById('stats');
            
            if (filteredLogos.length === 0) {
                logoGrid.innerHTML = '<div class="no-results">No logos found matching your search</div>';
                stats.textContent = '';
                return;
            }

            stats.textContent = `Showing ${filteredLogos.length} logo${filteredLogos.length !== 1 ? 's' : ''}`;

            logoGrid.innerHTML = filteredLogos.map(logo => {
                const fullPath = logo.path.startsWith('http') ? logo.path : `${BASE_URL}${logo.path}`;
                return `
                    <div class="logo-card" onclick="copyToClipboard('${fullPath}')">
                        <div class="logo-container">
                            <img src="${fullPath}" alt="${logo.name}" loading="lazy" onerror="this.parentElement.parentElement.style.display='none'">
                        </div>
                        <div class="logo-name">${logo.name.replace('.png', '')}</div>
                        <div class="logo-path">${fullPath}</div>
                    </div>
                `;
            }).join('');
        }

        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(() => {
                const notification = document.getElementById('notification');
                notification.classList.add('show');
                setTimeout(() => {
                    notification.classList.remove('show');
                }, 2000);
            });
        }

        // Search functionality
        document.getElementById('searchBox').addEventListener('input', (e) => {
            filterLogos();
        });

        // Country filter
        document.getElementById('countrySelect').addEventListener('change', (e) => {
            filterLogos();
        });

        function filterLogos() {
            const searchTerm = document.getElementById('searchBox').value.toLowerCase();
            const selectedCountry = document.getElementById('countrySelect').value;
            
            filteredLogos = allLogos.filter(logo => {
                const matchesSearch = logo.name.toLowerCase().includes(searchTerm);
                const matchesCountry = !selectedCountry || logo.country === selectedCountry;
                return matchesSearch && matchesCountry;
            });
            
            renderLogos();
        }

        // Load logos on page load
        loadLogos();
    </script>
</body>
</html>
